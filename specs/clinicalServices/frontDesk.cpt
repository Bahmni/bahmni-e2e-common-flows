# Login to Bahmni location <location> as a <user>
* Goto Clinical application
* Check if "Clinical Service" app is opened
* wait for overlay to disappear
* Log out if still logged in
* Login as user <user> with location <location>

# Login to Bahmni as a <user>
* Goto Clinical application
* Check if "Clinical Service" app is opened
* wait for overlay to disappear
* Log out if still logged in
* Login as user <user>

# Logout and Login to Bahmni location <location> as a <user>
* Log out if still logged in
* Login as user <user> with location <location>

# Logout and Login to Bahmni as a <user>
* Log out if still logged in
* Login as user <user>

# Create a new patient with gender <gender> with random name, aged <age> with mobile number <mobileNumber>
* Click create new patient
* Enter patient random first name
* Enter patient random middle name
* Enter patient random last name
* Enter patient gender <gender>
* Enter age of the patient <age>
* Enter village "Village"
* Enter patient mobile number <mobileNumber>
* Save the patient data

# Create a new patient with gender <gender> with random name, aged <age> with mobile number <mobileNumber> without village
* Click create new patient
* Enter patient random first name
* Enter patient random middle name
* Enter patient random last name
* Enter patient gender <gender>
* Enter age of the patient <age>
* Enter patient mobile number <mobileNumber>
* Save the patient data

# Open clinical tab
* Open "Clinical" module
* Select the newly created patient
* Doctor clicks consultation
* wait for overlay to disappear

# Open clinical tab with all section
* Open "Clinical" module
* Goto All section
* Select the newly created patient

# Start an OPD Visit
* Click Start OPD Visit
* Enter registration fees "100"
* Save visit data
* wait for overlay and Saved to disappear
* Click back button

# Start a <visit> Visit
* Click Start OPD Visit
* Save visit data
* wait for overlay and Saved to disappear
* Click back button

# Start an IPD Visit
* Click Start IPD Visit
* Enter registration fees "100"
* Save visit data
* wait for overlay and Saved to disappear
* Click back button

# Start an Special OPD Visit
* Click Start Special OPD Visit
* Enter registration fees "100"
* Save visit data
* wait for overlay and Saved to disappear
* Click back button

# Visit is closed at the front desk
* Open "Registration" module
* Open newly created patient details by search
* Enter visit details
* Confirm if you want to close the visit
* Close visit

# Receptionist creates the patient with mobile number <mobileNumber> without village
* Open "Registration" module
* Create a new patient with gender "Female" with random name, aged "29" with mobile number <mobileNumber> without village

# Receptionist creates the patient with mobile number <mobileNumber>
* Open "Registration" module
* Create a new patient with gender "Female" with random name, aged "29" with mobile number <mobileNumber>

# Receptionist creates the patient with mobile number <mobileNumber> and starts an OPD
* Receptionist creates the patient with mobile number <mobileNumber>
* Start an OPD Visit

# Receptionist creates the patient with mobile number <mobileNumber> and starts an Special OPD
* Open "Registration" module
* Create a new patient with gender "Female" with random name, aged "29" with mobile number <mobileNumber>
* Start an Special OPD Visit

# Create a new patient with gender <gender> with name <firstName> <middleName> <lastName>, aged <age> with mobile number <mobileNumber>
* Click create new patient if patient does not exist
* Enter patient first name <firstName>
* Enter patient middle name <middleName>
* Enter patient last name <lastName>
* Enter patient gender <gender>
* Enter age of the patient <age>
* Enter village "Village"
* Enter patient mobile number <mobileNumber>
* Save the newly created patient data

# Create a new patient, if patient does not exist with firstName <firstName> middleName <middleName> lastName <lastName>, gender <gender> mobileNumber <mobileNumber> age <age>
* Check if patient <firstName> <middleName> <lastName> with mobile "mobileNumber" exists
* Create a new patient with gender <gender> with name <firstName> <middleName> <lastName>, aged <age> with mobile number <mobileNumber>

# Receptionist creates a patient with mobileNumber <mobileNumber> and starts an IPD visit
* Open "Registration" module
* Create a new patient with gender "Female" with random name, aged "29" with mobile number <mobileNumber>
* Start an IPD Visit

# Save data
* wait for overlay to disappear
* Save visit data
* wait for overlay to disappear

# Random SNOMED diagnosis is identified using ECL query for <diagnosisName> which is not present in Openmrs Database and Doctor adds the identified SNOMED diagnosis in bahmni using <type> search
* Random snomed diagnosis is identified and verified in openmrs <diagnosisName>
* Doctor add the diagnosis for <type>
* Save data

# Doctor adds the random SNOMED descendant of <diagnosisName> using <type> search
 * Doctor add the diagnosis for <type>
 * Save data


# Login to Bahmni SNOMED location <location> as a <user>
* Goto Clinical application
* Check if "Clinical Service" app is opened
* wait for overlay to disappear
* Log out if still logged in
* Login as user <user> with location <location> in bahmni snomed
# Create new patient with random details and start an OPD visit
* Open "Registration" module
* Create a new patient with random patient detail for snomed
* Start an OPD Visit

# Create a new patient with random patient detail for snomed
* Click create new patient
* Enter patient random first name
* Enter patient random middle name
* Enter patient random last name
* Enter patient random gender
* Enter random age of the patient
* Enter patient random mobile number
* Enter random village
* Upload patient image
* Save the patient data
* Verify no error displayed on page

# Logout and Login to Bahmni SNOMED location <location> as a <user>
* Log out if still logged in
* Login as user <user> with location <location> in bahmni snomed

# Validate the count report for <reportName> before adding the identified diagnosis <diagnosisName>
* Random SNOMED diagnosis is identified using ECL query for descendants of <diagnosisName>
* Doctor checks for the diagnosis in report <reportName>

# Doctor checks for the diagnosis in report <reportName>
* Select start date, end date and "HTML" format for <reportName> and click on run button
* Validate report and check count before adding diagnosis
* Click on home page

# Validate the SNOMED diagnosis line report for Malaria
* Validate "Patient Name" on diagnosis line reports
* Validate "Gender" on diagnosis line reports
* Validate "Date of Birth" on diagnosis line reports
* Validate "Diagnosis" on diagnosis line reports
* Validate "SNOMED Code" on diagnosis line reports
* Close tab

# Validate the SNOMED diagnosis line report for Asthma
* Validate "Patient Name" on diagnosis line reports
* Validate "Gender" on diagnosis line reports
* Validate "education" on diagnosis line reports
* Validate "class" on diagnosis line reports
* Validate "city_village" on diagnosis line reports
* Validate "Date of Birth" on diagnosis line reports
* Validate "Diagnosis" on diagnosis line reports
* Validate "SNOMED Code" on diagnosis line reports
* Close tab

# Validate the SNOMED diagnosis line report for COVID-19
* Validate "Patient Name" on diagnosis line reports
* Validate "Gender" on diagnosis line reports
* Validate "education" on diagnosis line reports
* Validate "class" on diagnosis line reports
* Validate "occupation" on diagnosis line reports
* Validate "city_village" on diagnosis line reports
* Validate "address1" on diagnosis line reports
* Validate "Date of Birth" on diagnosis line reports
* Validate "Diagnosis" on diagnosis line reports
* Validate "SNOMED Code" on diagnosis line reports
* Close tab

# Validate the SNOMED diagnosis line report for COVID-19 with ICD-10 code
* Validate "Patient Name" on diagnosis line reports
* Validate "Gender" on diagnosis line reports
* Validate "Date of Birth" on diagnosis line reports
* Validate "Diagnosis" on diagnosis line reports
* Validate "SNOMED Code" on diagnosis line reports
* Validate "ICD10 Code(s)" on diagnosis line reports
* Close tab

# Validate the SNOMED diagnosis line report for Bronchitis with ICD-10 code
* Validate "Patient Name" on diagnosis line reports
* Validate "Gender" on diagnosis line reports
* Validate "Date of Birth" on diagnosis line reports
* Validate "Diagnosis" on diagnosis line reports
* Validate "SNOMED Code" on diagnosis line reports
* Validate "ICD10 Code(s)" on diagnosis line reports
* Close tab

# Validate the SNOMED diagnosis line report for Peritonitis with ICD-10 code
* Validate "Patient Name" on diagnosis line reports
* Validate "Gender" on diagnosis line reports
* Validate "education" on diagnosis line reports
* Validate "class" on diagnosis line reports
* Validate "city_village" on diagnosis line reports
* Validate "Date of Birth" on diagnosis line reports
* Validate "Diagnosis" on diagnosis line reports
* Validate "SNOMED Code" on diagnosis line reports
* Validate "ICD10 Code(s)" on diagnosis line reports
* Close tab

# visit is closed at the front desk
* Open "Registration" module
* Open newly created patient details by search
* Enter visit details
* Confirm if you want to close the visit
* Close visit

